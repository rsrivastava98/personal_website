{"ast":null,"code":"function graph1(d3, margin, graph_1_width, graph_1_height, FOOTBALL_DATA_SET) {\n  let svg = d3.select(\"#graph1\").append(\"svg\").attr(\"width\", graph_1_width).attr(\"height\", graph_1_height).append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n  let h = graph_1_height - margin.top - margin.bottom;\n  let countG = svg.append(\"g\");\n  var y_axis_label = svg.append(\"g\").attr(\"transform\", \"translate(0,\" + h + \")\");\n  let title = svg.append(\"text\").text(\"Number of Games Played by Year\").attr(\"transform\", `translate(${(graph_1_width - margin.left - margin.right) / 2}, ${-25})`).style(\"text-anchor\", \"middle\").style(\"font-size\", \"14\");\n  svg.append(\"text\").attr(\"transform\", `translate(${(graph_1_width - margin.left - margin.right) / 2},\n                                                ${graph_1_height - margin.top - margin.bottom + 40})`).style(\"text-anchor\", \"middle\").text(\"Year\").attr(\"font-size\", \"14\");\n  svg.append(\"text\").attr(\"transform\", `translate(-50, ${(graph_1_height - margin.top - margin.bottom) / 2})`).style(\"text-anchor\", \"middle\").text(\"Count\").attr(\"font-size\", \"14\");\n  var groups = [2020, 2010, 2000, 1990, 1980, 1970, 1960, 1950, 1940, 1930, 1920, 1910, 1900];\n  d3.select(\"#selectButton\").selectAll('year').data(groups).enter().append('option').text(function (d) {\n    return d;\n  }).attr(\"value\", function (d) {\n    return d;\n  });\n  d3.select(\"#selectButton\").on(\"change\", function (d) {\n    var selectedOption = d3.select(this).property(\"value\");\n    filterData(selectedOption);\n  });\n\n  function filterData(option) {\n    let filename = FOOTBALL_DATA_SET;\n    d3.csv(filename).then(function (data) {\n      console.log(data);\n      data = getData(data, function (entry) {\n        let dif = option - parseInt(entry.date.slice(0, 4));\n\n        if (dif >= 0 && dif < 10) {\n          return true;\n        }\n\n        return false;\n      });\n      data = countGamesInYear(data);\n      data = sortData(data, function (a, b) {\n        return b - a;\n      });\n      let y = d3.scaleLinear().domain([0, d3.max(data, d => d[1])]).range([graph_1_height - margin.top - margin.bottom, 0]);\n      let x = d3.scaleBand().domain(data.map(d => d[0])).range([0, graph_1_width - margin.left - margin.right]).padding(0.1);\n      y_axis_label.call(d3.axisBottom(x).tickPadding(5)); // let color = d3.scaleOrdinal()\n      //     .range(d3.schemeAccent);\n\n      let bars = svg.selectAll(\"rect\").data(data);\n      bars.enter().append(\"rect\").merge(bars).transition().duration(1000).attr(\"fill\", \"#59C3C3\").attr(\"x\", function (d) {\n        return x(d[0]);\n      }).attr(\"y\", d => y(d[1])).attr(\"width\", x.bandwidth()).attr(\"height\", function (d) {\n        return graph_1_height - margin.top - margin.bottom - y(d[1]);\n      });\n      let counts = countG.selectAll(\"text\").data(data);\n      counts.enter().append(\"text\").merge(counts).transition().duration(1000).attr(\"y\", function (d) {\n        return y(d[1]) - 5;\n      }).attr(\"x\", function (d) {\n        return x(d[0]) + 0.35 * x.bandwidth();\n      }).style(\"text-anchor\", \"start\").text(function (d) {\n        return d[1];\n      }).attr(\"font-size\", \"12\");\n      bars.exit().remove();\n      counts.exit().remove();\n\n      function getData(data, comparator) {\n        return data.filter(comparator);\n      }\n\n      function sortData(data, comparator) {\n        let new_data = Object.keys(data);\n        return new_data.sort(comparator).slice(0, 10).map(key => [key, data[key]]);\n      }\n\n      function countGamesInYear(data) {\n        var countData = {};\n\n        for (var i = 0; i < data.length; i++) {\n          let year = parseInt(data[i].date.slice(0, 4));\n\n          if (!(year in countData)) {\n            countData[year] = 1;\n          } else {\n            countData[year]++;\n          }\n        }\n\n        return countData;\n      }\n    });\n  }\n\n  filterData(2020);\n}\n\nfunction graph3(d3, margin, graph_3_width, graph_3_height, FOOTBALL_DATA_SET, locations_csv) {\n  var location = {\n    \"Asturias\": [43.36, -5.95],\n    \"Jersey\": [49.21, -2.13],\n    \"Chameria\": [46.46, 5.56],\n    \"Menorca\": [39.94, 4.11],\n    \"Canary Islands\": [28.29, -16.62],\n    \"Padania\": [45.29, 11.16],\n    \"Basque Country\": [42.96, -2.59],\n    \"Brazil\": [-23.53, -46.62],\n    \"Tahiti\": [-17.36, -149.5],\n    \"Ivory Coast\": [5.34, -4.02],\n    \"Iraqi Kurdistan\": [30.86, 44.10],\n    \"Ynys MÃ´n\": [53.267684, -4.371611],\n    \"Isle of Man\": [54.205801, -4.529593],\n    \"Abkhazia\": [43.141859, 40.999746],\n    \"Guernsey\": [49.446756, -2.573537],\n    \"Yugoslavia\": [44.810045, 20.429455],\n    \"Isle of Wight\": [50.682774, -1.318987],\n    \"Scotland\": [57.087281, -2.908522],\n    \"China PR\": [32.137429, 103.543756],\n    \"German DR\": [52.555621, 13.382851]\n  };\n  let svg = d3.select(\"#graph3\").append(\"svg\").attr(\"width\", graph_3_width).attr(\"height\", graph_3_height).append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n  var projection = d3.geoMercator().center([0, 20]) // GPS of location to zoom on\n  .scale(99) // This is like the zoom\n  .translate([(graph_3_width - margin.left - margin.right) / 2, (graph_3_height - margin.top - margin.bottom) / 2]);\n  var curr_nations = 10;\n  var curr_games = 20;\n  var groups = [10, 20, 30, 40];\n  d3.select(\"#selectButton2\").selectAll('number').data(groups).enter().append('option').text(function (d) {\n    return d;\n  }) // text showed in the menu\n  .attr(\"value\", function (d) {\n    return d;\n  }); // corresponding value returned by the button\n\n  d3.select(\"#selectButton2\").on(\"change\", function (d) {\n    // recover the option that has been chosen\n    var selectedOption = d3.select(this).property(\"value\");\n    curr_nations = selectedOption; // run the updateChart function with this selected option\n\n    changeMap(curr_nations, curr_games);\n  });\n  var min_games = [20, 40, 60, 80, 100];\n  d3.select(\"#selectButton3\").selectAll('number').data(min_games).enter().append('option').text(function (d) {\n    return d;\n  }) // text showed in the menu\n  .attr(\"value\", function (d) {\n    return d;\n  }); // corresponding value returned by the button\n\n  d3.select(\"#selectButton3\").on(\"change\", function (d) {\n    // recover the option that has been chosen\n    var selectedOption = d3.select(this).property(\"value\"); // run the updateChart function with this selected option\n\n    curr_games = selectedOption;\n    changeMap(curr_nations, curr_games);\n  });\n  let filename_2 = \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\";\n  d3.json(filename_2).then(function (geoData) {\n    svg.append(\"g\").selectAll(\"path\").data(geoData.features).enter().append(\"path\").attr(\"fill\", \"#b8b8b8\").attr(\"d\", d3.geoPath().projection(projection)).style(\"stroke\", \"none\").style(\"opacity\", .3);\n  });\n  let title = svg.append(\"text\").attr(\"text-anchor\", \"end\").style(\"fill\", \"black\").attr(\"x\", (graph_3_width - margin.left) / 2).attr(\"y\", 20).attr(\"width\", 100).style(\"font-size\", 16).style(\"font-weight\", \"bold\");\n  var tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n  s;\n\n  function changeMap(number, threshold) {\n    let filename_1 = FOOTBALL_DATA_SET;\n    let locations_file = locations_csv;\n    d3.csv(filename_1).then(function (data) {\n      d3.csv(locations_file).then(function (locations) {\n        data = findWinPercentage(data, threshold);\n        data = data.sort(function (a, b) {\n          return b[1] - a[1];\n        }).slice(0, number);\n        var locs = {};\n\n        for (var i = 0; i < locations.length; i++) {\n          let entry = locations[i];\n          locs[entry.Country] = [entry.Latitude, entry.Longitude];\n        }\n\n        let keys = Object.keys(location);\n\n        for (var i = 0; i < keys.length; i++) {\n          if (!(keys[i] in locs)) {\n            locs[keys[i]] = location[keys[i]];\n          }\n        }\n\n        for (var i = 0; i < data.length; i++) {\n          if (!(data[i][0] in locs)) {\n            console.log(data[i], locs[data[i][0]]);\n          }\n        } // let color = d3.scaleOrdinal()\n        // .range(d3.quantize(d3.interpolateHcl(\"#4062BB\", \"#81c2c3\"), places.length));\n\n\n        var value = d3.extent(data, d => d[1]);\n        var size = d3.scaleSqrt().domain(value).range([1, 30]);\n        let circles = svg.selectAll(\"circle\").data(data);\n        circles.enter().append(\"circle\").merge(circles).style(\"fill\", \"4062BB\").on(\"mouseover\", function (d) {\n          tooltip.transition().duration(100).style(\"opacity\", 0.9);\n          tooltip.html(\"<b>\" + d[0] + \"</b>\" + \"<br/>\" + \"<b>Wins</b>: \" + (d[1] * 100).toFixed(2) + \"%\").style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 30 + \"px\");\n        }).on(\"mouseout\", function (d) {\n          tooltip.transition().duration(500).style(\"opacity\", 0);\n        }).transition().duration(1000).attr(\"cx\", function (d) {\n          return projection([locs[d[0]][1], locs[d[0]][0]])[0];\n        }).attr(\"cy\", function (d) {\n          return projection([locs[d[0]][1], locs[d[0]][0]])[1];\n        }).attr(\"r\", function (d) {\n          return size(+d[1]);\n        }).attr(\"fill-opacity\", .5); // .style(\"stroke\", \"black\")\n        // .style(\"stroke-width\", \"1px\")\n\n        title.html(`Top ${number} Winners`);\n        circles.exit().remove();\n      });\n    });\n\n    function findWinPercentage(data, threshold) {\n      var wins = {};\n      var games = {};\n      var win_pct = [];\n\n      for (var i = 0; i < data.length; i++) {\n        let home_team = data[i].home_team;\n        let away_team = data[i].away_team;\n        let score_dif = parseInt(data[i].home_score) - parseInt(data[i].away_score);\n        let winner = score_dif > 0 ? home_team : away_team;\n\n        if (!(winner in wins)) {\n          wins[winner] = 1;\n        } else {\n          wins[winner]++;\n        }\n\n        if (!(home_team in games)) {\n          games[home_team] = 1;\n        } else {\n          games[home_team]++;\n        }\n\n        if (!(away_team in games)) {\n          games[away_team] = 1;\n        } else {\n          games[away_team]++;\n        }\n      }\n\n      let keys = Object.keys(games);\n\n      for (var i = 0; i < keys.length; i++) {\n        if (keys[i] in wins && games[keys[i]] > threshold) {\n          win_pct.push([keys[i], wins[keys[i]] / games[keys[i]]]);\n        } else {\n          win_pct.push([keys[i], 0.0]);\n        }\n      }\n\n      return win_pct;\n    }\n  }\n\n  changeMap(10, 20);\n}\n\nfunction graph2(d3, margin, graph_2_width, graph_2_height, FOOTBALL_DATA_SET) {\n  let svg = d3.select(\"#graph2\").append(\"svg\").attr(\"width\", graph_2_width).attr(\"height\", graph_2_height).append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n  var tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip-2\").style(\"opacity\", 0);\n  d3.csv(FOOTBALL_DATA_SET).then(function (data) {\n    data = data.filter(function (entry) {\n      let year = parseInt(entry.date.slice(0, 4));\n      return entry.tournament == 'FIFA World Cup' && (year == 2018 || year == 2014);\n    });\n    var winData = findWinPercentage(data);\n    var goals = findGoals(data);\n\n    for (var i = 0; i < winData.length; i++) {\n      winData[i].push(goals[winData[i][0]]);\n    }\n\n    svg.append(\"text\").text(\"Win % vs Goals Scored by Teams for FIFA World Cups 2014 and 2018\").attr(\"transform\", `translate(${(graph_2_width - margin.left - margin.right) / 2}, ${-5})`).style(\"text-anchor\", \"middle\").style(\"font-size\", \"14\");\n    svg.append(\"text\").attr(\"transform\", `translate(${(graph_2_width - margin.left - margin.right) / 2},\n                                                ${graph_2_height - margin.top - margin.bottom + 40})`).style(\"text-anchor\", \"middle\").text(\"Goals\").attr(\"font-size\", \"14\");\n    svg.append(\"text\").attr(\"transform\", `translate(-50, ${(graph_2_height - margin.top - margin.bottom) / 2})`).style(\"text-anchor\", \"middle\").text(\"Win %\").attr(\"font-size\", \"14\");\n    let y = d3.scaleLinear().domain([0, d3.max(winData, d => d[1])]).range([graph_2_height - margin.top - margin.bottom, 0]);\n    let x = d3.scaleLinear().domain([0, d3.max(winData, d => d[2])]).range([0, graph_2_width - margin.left - margin.right]);\n    let h = graph_2_height - margin.top - margin.bottom;\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + h + \")\").call(d3.axisBottom(x));\n    svg.append(\"g\").call(d3.axisLeft(y));\n    console.log(winData);\n    svg.append('g').selectAll(\"dot\").data(winData).enter().append(\"circle\").style(\"fill\", \"#F45B69\").on(\"mouseover\", function (d) {\n      tooltip.transition().duration(100).style(\"opacity\", 0.9);\n      tooltip.html(\"<b>\" + d[0] + \"</b>\" + \"<br/>\" + \"<b>Wins</b>: \" + d[1].toFixed(2) + \"%\" + \"<br/>\" + \"<b>Goals Scored</b>: \" + d[2]).style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 30 + \"px\");\n    }).on(\"mouseout\", function (d) {\n      tooltip.transition().duration(500).style(\"opacity\", 0);\n    }).transition().duration(1000).attr(\"cx\", function (d) {\n      return x(d[2]);\n    }).attr(\"cy\", function (d) {\n      return y(d[1]);\n    }).attr(\"r\", 5);\n  });\n\n  function findWinPercentage(data) {\n    var wins = {};\n    var games = {};\n    var win_pct = [];\n\n    for (var i = 0; i < data.length; i++) {\n      let home_team = data[i].home_team;\n      let away_team = data[i].away_team;\n      let score_dif = parseInt(data[i].home_score) - parseInt(data[i].away_score);\n      let winner = score_dif > 0 ? home_team : away_team;\n\n      if (!(winner in wins)) {\n        wins[winner] = 1;\n      } else {\n        wins[winner]++;\n      }\n\n      if (!(home_team in games)) {\n        games[home_team] = 1;\n      } else {\n        games[home_team]++;\n      }\n\n      if (!(away_team in games)) {\n        games[away_team] = 1;\n      } else {\n        games[away_team]++;\n      }\n    }\n\n    let keys = Object.keys(games);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (keys[i] in wins) {\n        win_pct.push([keys[i], wins[keys[i]] / games[keys[i]] * 100]);\n      } else {\n        win_pct.push([keys[i], 0.0]);\n      }\n    }\n\n    return win_pct;\n  }\n\n  function findGoals(data) {\n    var goals = {};\n\n    for (var i = 0; i < data.length; i++) {\n      let home_team = data[i].home_team;\n      let away_team = data[i].away_team;\n      let home_score = parseInt(data[i].home_score);\n      let away_score = parseInt(data[i].away_score);\n\n      if (!(home_team in goals)) {\n        goals[home_team] = home_score;\n      } else {\n        goals[home_team] = goals[home_team] + home_score;\n      }\n\n      if (!(away_team in goals)) {\n        goals[away_team] = away_score;\n      } else {\n        goals[away_team] = goals[away_team] + away_score;\n      }\n    }\n\n    return goals;\n  }\n}\n\nexport default function main(d3, football, locations) {\n  // Add your JavaScript code here\n  const MAX_WIDTH = Math.max(1080, window.innerWidth);\n  const MAX_HEIGHT = 720;\n  const margin = {\n    top: 40,\n    right: 100,\n    bottom: 40,\n    left: 175\n  }; // Assumes the same graph width, height dimensions as the example dashboard. Feel free to change these if you'd like\n\n  let graph_1_width = MAX_WIDTH / 2 - 10,\n      graph_1_height = 250;\n  let graph_2_width = MAX_WIDTH / 2 - 10,\n      graph_2_height = 275;\n  let graph_3_width = MAX_WIDTH / 2,\n      graph_3_height = 575;\n  let FOOTBALL_DATA_SET = football;\n  graph1(d3, margin, graph_1_width, graph_1_height, FOOTBALL_DATA_SET);\n  graph3(d3, margin, graph_3_width, graph_3_height, FOOTBALL_DATA_SET, locations);\n  graph2(d3, margin, graph_2_width, graph_2_height, FOOTBALL_DATA_SET);\n}","map":{"version":3,"sources":["/Users/rudrasrivastava/Desktop/personal_website/src/main.js"],"names":["graph1","d3","margin","graph_1_width","graph_1_height","FOOTBALL_DATA_SET","svg","select","append","attr","left","top","h","bottom","countG","y_axis_label","title","text","right","style","groups","selectAll","data","enter","d","on","selectedOption","property","filterData","option","filename","csv","then","console","log","getData","entry","dif","parseInt","date","slice","countGamesInYear","sortData","a","b","y","scaleLinear","domain","max","range","x","scaleBand","map","padding","call","axisBottom","tickPadding","bars","merge","transition","duration","bandwidth","counts","exit","remove","comparator","filter","new_data","Object","keys","sort","key","countData","i","length","year","graph3","graph_3_width","graph_3_height","locations_csv","location","projection","geoMercator","center","scale","translate","curr_nations","curr_games","changeMap","min_games","filename_2","json","geoData","features","geoPath","tooltip","s","number","threshold","filename_1","locations_file","locations","findWinPercentage","locs","Country","Latitude","Longitude","value","extent","size","scaleSqrt","circles","html","toFixed","event","pageX","pageY","wins","games","win_pct","home_team","away_team","score_dif","home_score","away_score","winner","push","graph2","graph_2_width","graph_2_height","tournament","winData","goals","findGoals","axisLeft","main","football","MAX_WIDTH","Math","window","innerWidth","MAX_HEIGHT"],"mappings":"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","sourcesContent":["\nfunction graph1(d3, margin, graph_1_width, graph_1_height, FOOTBALL_DATA_SET){\n\n    let svg = d3.select(\"#graph1\")\n        .append(\"svg\")\n        .attr(\"width\", graph_1_width)    \n        .attr(\"height\", graph_1_height)     \n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    let h = graph_1_height - margin.top - margin.bottom\n\n    let countG = svg.append(\"g\")\n    var y_axis_label = svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + h + \")\")\n\n    let title = svg.append(\"text\").text(\"Number of Games Played by Year\")\n            .attr(\"transform\", `translate(${(graph_1_width - margin.left - margin.right) / 2}, ${-25})`)       \n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"14\");\n\n    svg.append(\"text\")\n            .attr(\"transform\", `translate(${(graph_1_width - margin.left - margin.right) / 2},\n                                                ${(graph_1_height - margin.top - margin.bottom) + 40})`)       \n            .style(\"text-anchor\", \"middle\")\n            .text(\"Year\").attr(\"font-size\", \"14\");    \n            \n\n    svg.append(\"text\")\n            .attr(\"transform\", `translate(-50, ${(graph_1_height - margin.top - margin.bottom) / 2})`)       \n            .style(\"text-anchor\", \"middle\").text(\"Count\").attr(\"font-size\", \"14\");    \n\n    \n    var groups = [2020, 2010, 2000, 1990, 1980, 1970, 1960, 1950, 1940, 1930, 1920, 1910, 1900];\n    d3.select(\"#selectButton\")\n    .selectAll('year').data(groups)\n      .enter()\n        .append('option')\n      .text(function (d) { return d; }) \n      .attr(\"value\", function (d) { return d; }) \n\n    d3.select(\"#selectButton\").on(\"change\", function(d) {\n        var selectedOption = d3.select(this).property(\"value\")\n        filterData(selectedOption)\n    })\n\n    function filterData(option){\n\n        let filename = FOOTBALL_DATA_SET;\n        d3.csv(filename).then(function(data) {\n\n            console.log(data)\n\n            \n            data = getData(data, function(entry){\n                    let dif = option - parseInt(entry.date.slice(0,4))\n                    if(dif >= 0 && dif < 10){\n                        return true;\n                    }\n                    return false;\n            });\n            \n            \n            data = countGamesInYear(data)\n            data = sortData(data, function(a , b){\n                return b - a\n            });\n            \n\n            let y = d3.scaleLinear()\n                .domain([0, d3.max(data, d => d[1])])\n                .range([graph_1_height - margin.top - margin.bottom, 0]);\n\n            let x = d3.scaleBand()\n                .domain(data.map(d => d[0]))\n                .range([0, graph_1_width - margin.left - margin.right])\n                .padding(0.1);\n            \n            \n            y_axis_label.call(d3.axisBottom(x).tickPadding(5))\n\n            \n            // let color = d3.scaleOrdinal()\n            //     .range(d3.schemeAccent);\n\n            let bars = svg.selectAll(\"rect\").data(data);\n\n            bars.enter()\n                .append(\"rect\")\n                .merge(bars).transition()\n                .duration(1000)\n                .attr(\"fill\", \"#59C3C3\")    \n                .attr(\"x\", function(d) { return x(d[0]); })\n                .attr(\"y\", d => y(d[1]))         \n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\",  function(d) { return graph_1_height - margin.top - margin.bottom- y(d[1]); }); \n            \n            let counts = countG.selectAll(\"text\").data(data);\n\n            counts.enter()\n                    .append(\"text\")\n                    .merge(counts)\n                    .transition()\n                    .duration(1000)\n                    .attr(\"y\", function(d) { return y(d[1]) - 5; })       \n                    .attr(\"x\", function(d) { return x(d[0]) + 0.35*x.bandwidth(); })       \n                    .style(\"text-anchor\", \"start\")\n                    .text(function(d) {return d[1];})  \n                    .attr(\"font-size\", \"12\");    \n        \n            \n            \n            bars.exit().remove();\n            counts.exit().remove();\n\n\n            function getData(data, comparator) {\n                return data.filter(comparator);\n            }\n\n            function sortData(data, comparator){\n                let new_data = Object.keys(data)\n                return new_data.sort(comparator).slice(0, 10).map(key => [key, data[key]]);\n            }\n\n            function countGamesInYear(data){\n                var countData = {}\n\n                for(var i = 0; i < data.length; i++){\n                    let year = parseInt(data[i].date.slice(0,4))\n                    if(!(year in countData)){\n                        countData[year] = 1;\n                    }\n                    else{\n                        countData[year] ++;\n                    }\n\n                }\n\n                return countData\n            }\n\n        });    \n    }\n\n    filterData(2020)\n}\n\n\nfunction graph3(d3, margin, graph_3_width, graph_3_height, FOOTBALL_DATA_SET, locations_csv){\n\n    var location = {\"Asturias\": [43.36, -5.95],\n                    \"Jersey\": [49.21, -2.13],\n                    \"Chameria\": [46.46, 5.56],\n                    \"Menorca\": [39.94, 4.11],\n                    \"Canary Islands\": [28.29, -16.62],\n                    \"Padania\": [45.29, 11.16],\n                    \"Basque Country\": [42.96, -2.59],\n                    \"Brazil\": [-23.53, -46.62],\n                    \"Tahiti\": [-17.36, -149.5],\n                    \"Ivory Coast\": [5.34, -4.02],\n                    \"Iraqi Kurdistan\": [30.86, 44.10],\n                    \"Ynys MÃ´n\":[53.267684, -4.371611],\n                    \"Isle of Man\": [54.205801, -4.529593],\n                    \"Abkhazia\": [43.141859, 40.999746],\n                    \"Guernsey\": [49.446756, -2.573537],\n                    \"Yugoslavia\": [44.810045, 20.429455],\n                    \"Isle of Wight\": [50.682774, -1.318987],\n                    \"Scotland\": [57.087281, -2.908522],\n                    \"China PR\": [32.137429, 103.543756],\n                    \"German DR\": [52.555621, 13.382851]\n                    }\n\n    let svg = d3.select(\"#graph3\")\n        .append(\"svg\")\n        .attr(\"width\", graph_3_width)    \n        .attr(\"height\", graph_3_height)     \n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    var projection = d3.geoMercator()\n        .center([0,20])                // GPS of location to zoom on\n        .scale(99)                       // This is like the zoom\n        .translate([(graph_3_width-margin.left-margin.right)/2, (graph_3_height-margin.top-margin.bottom)/2 ])\n\n    \n    var curr_nations = 10;\n    var curr_games = 20;\n\n    var groups = [10, 20, 30, 40];\n    d3.select(\"#selectButton2\")\n    .selectAll('number').data(groups)\n      .enter()\n        .append('option')\n      .text(function (d) { return d; }) // text showed in the menu\n      .attr(\"value\", function (d) { return d; }) // corresponding value returned by the button\n\n    d3.select(\"#selectButton2\").on(\"change\", function(d) {\n        // recover the option that has been chosen\n        var selectedOption = d3.select(this).property(\"value\")\n        curr_nations = selectedOption;\n        // run the updateChart function with this selected option\n        changeMap(curr_nations, curr_games)\n    })\n\n    var min_games = [20, 40, 60, 80, 100];\n    d3.select(\"#selectButton3\")\n    .selectAll('number').data(min_games)\n      .enter()\n        .append('option')\n      .text(function (d) { return d; }) // text showed in the menu\n      .attr(\"value\", function (d) { return d; }) // corresponding value returned by the button\n\n    d3.select(\"#selectButton3\").on(\"change\", function(d) {\n        // recover the option that has been chosen\n        var selectedOption = d3.select(this).property(\"value\")\n        // run the updateChart function with this selected option\n        curr_games = selectedOption;\n        changeMap(curr_nations, curr_games)\n    })\n\n    let filename_2 = \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\";\n\n    d3.json(filename_2).then(function(geoData) {\n\n        svg.append(\"g\")\n                    .selectAll(\"path\")\n                    .data(geoData.features)\n                    .enter()\n                    .append(\"path\")\n                    .attr(\"fill\", \"#b8b8b8\")\n                    .attr(\"d\", d3.geoPath()\n                        .projection(projection)\n                    )\n                    .style(\"stroke\", \"none\")\n                    .style(\"opacity\", .3)\n\n    });\n\n    let title = svg\n    .append(\"text\")\n    .attr(\"text-anchor\", \"end\")\n    .style(\"fill\", \"black\")\n    .attr(\"x\", (graph_3_width - margin.left)/2)\n    .attr(\"y\", 20)\n    .attr(\"width\", 100).style(\"font-size\", 16)\n    .style(\"font-weight\", \"bold\")\n\n    var tooltip = d3.select(\"body\").append(\"div\")\t\n                    .attr(\"class\", \"tooltip\")\t\t\t\t\n                    .style(\"opacity\", 0);\n    s\n    function changeMap(number, threshold){\n\n    \n\n        let filename_1 = FOOTBALL_DATA_SET;\n        let locations_file = locations_csv;\n        d3.csv(filename_1).then(function(data) {\n            \n                d3.csv(locations_file).then(function(locations) {\n\n                    data = findWinPercentage(data, threshold);\n                    data = data.sort(function(a, b){\n                        return b[1] - a[1]\n                    }).slice(0, number);\n\n                    var locs = {}\n\n                    for(var i = 0; i < locations.length; i++){\n                        let entry = locations[i];\n                        locs[entry.Country] = [entry.Latitude, entry.Longitude];\n                    }\n                    \n                    let keys = Object.keys(location);\n                    for(var i = 0; i < keys.length; i++){\n                        if(!(keys[i] in locs)){\n                            locs[keys[i]] = location[keys[i]];\n                        }\n                    \n                    }\n\n                    for(var i = 0; i < data.length; i++){\n                        if(!(data[i][0] in locs)){\n                            console.log(data[i], locs[data[i][0]])\n                        }\n                    }\n\n                    // let color = d3.scaleOrdinal()\n                    // .range(d3.quantize(d3.interpolateHcl(\"#4062BB\", \"#81c2c3\"), places.length));\n\n                    var value = d3.extent(data, d=> d[1])\n                    var size = d3.scaleSqrt()\n                    .domain(value)  \n                    .range([1, 30]) \n\n                    let circles = svg\n                    .selectAll(\"circle\").data(data)\n\n                    \n                    circles.enter()\n                    .append(\"circle\")\n                    .merge(circles)\n                    .style(\"fill\", \"4062BB\").on(\"mouseover\", function(d) {\t\t\n                        tooltip.transition()\t\t\n                            .duration(100)\t\t\n                            .style(\"opacity\", 0.9);\t\n                        \t\n                        tooltip.html(\"<b>\"+d[0]+ \"</b>\" + \"<br/>\"  + \"<b>Wins</b>: \" + (d[1]*100).toFixed(2) + \"%\")\t\n                            .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                            .style(\"top\", (d3.event.pageY - 30) + \"px\");\t\n                        })\t\t\t\t\t\n                    .on(\"mouseout\", function(d) {\t\t\n                        tooltip.transition()\t\t\n                            .duration(500)\t\t\n                            .style(\"opacity\", 0);\n                    })\t\n                    .transition()\n                    .duration(1000)\n                    .attr(\"cx\", function(d){ return projection([locs[d[0]][1], locs[d[0]][0]])[0] })\n                    .attr(\"cy\", function(d){ return projection([locs[d[0]][1], locs[d[0]][0]])[1] })\n                    .attr(\"r\", function(d){ return size(+d[1]) })\n                    .attr(\"fill-opacity\", .5);\n                    // .style(\"stroke\", \"black\")\n                    // .style(\"stroke-width\", \"1px\")\n                    \n                    title.html(`Top ${number} Winners`)\n                    \n                    circles.exit().remove()\n                });\n            \n        });\n\n        function findWinPercentage(data, threshold){\n            var wins = {}\n            var games = {}\n            var win_pct = []\n\n            for(var i = 0; i < data.length; i++){\n                let home_team = data[i].home_team;\n                let away_team = data[i].away_team;\n                let score_dif = parseInt(data[i].home_score) - parseInt(data[i].away_score);\n                let winner = score_dif > 0 ? home_team : away_team;\n\n                \n                if(!(winner in wins)){\n                    wins[winner] = 1;\n                }\n                else{\n                    wins[winner] ++;\n                }\n                \n\n                if(!(home_team in games)){\n                    games[home_team] = 1;\n                }\n                else{\n                    games[home_team] ++;\n                }\n\n                if(!(away_team in games)){\n                    games[away_team] = 1;\n                }\n                else{\n                    games[away_team] ++;\n                }\n            }\n            let keys = Object.keys(games)\n            for(var i = 0; i < keys.length; i++){\n                if(keys[i] in wins && games[keys[i]] > threshold){\n                    win_pct.push([keys[i], (wins[keys[i]]/games[keys[i]])])\n                }\n                else{\n                    win_pct.push([keys[i], 0.0])\n                }\n\n            }\n\n            return win_pct\n        }\n    }\n\n    changeMap(10, 20);\n\n\n}\n\nfunction graph2(d3, margin, graph_2_width, graph_2_height, FOOTBALL_DATA_SET){\n\n    let svg = d3.select(\"#graph2\")\n        .append(\"svg\")\n        .attr(\"width\", graph_2_width)    \n        .attr(\"height\", graph_2_height)     \n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    var tooltip = d3.select(\"body\").append(\"div\")\t\n        .attr(\"class\", \"tooltip-2\")\t\t\t\t\n        .style(\"opacity\", 0);\n\n    d3.csv(FOOTBALL_DATA_SET).then(function(data) {\n\n\n        data = data.filter(function(entry){\n            let year = parseInt(entry.date.slice(0, 4))\n            return (entry.tournament == 'FIFA World Cup') && (year == 2018 || year == 2014)\n        });\n\n        var winData = findWinPercentage(data)\n        var goals = findGoals(data)\n    \n        for(var i = 0; i <winData.length; i++){\n\n            winData[i].push(goals[winData[i][0]])\n        }\n\n        svg.append(\"text\").text(\"Win % vs Goals Scored by Teams for FIFA World Cups 2014 and 2018\")\n            .attr(\"transform\", `translate(${(graph_2_width - margin.left - margin.right) / 2}, ${-5})`)       \n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"14\");\n\n        svg.append(\"text\")\n            .attr(\"transform\", `translate(${(graph_2_width - margin.left - margin.right) / 2},\n                                                ${(graph_2_height - margin.top - margin.bottom) + 40})`)       \n            .style(\"text-anchor\", \"middle\")\n            .text(\"Goals\").attr(\"font-size\", \"14\");    \n            \n\n        svg.append(\"text\")\n            .attr(\"transform\", `translate(-50, ${(graph_2_height - margin.top - margin.bottom) / 2})`)       \n            .style(\"text-anchor\", \"middle\").text(\"Win %\").attr(\"font-size\", \"14\");    \n\n        let y = d3.scaleLinear()\n            .domain([0, d3.max(winData, d => d[1])])\n            .range([graph_2_height - margin.top - margin.bottom, 0]);\n\n        let x = d3.scaleLinear()\n        .domain([0, d3.max(winData, d => d[2])])\n        .range([0, graph_2_width - margin.left - margin.right]);\n        \n        let h = graph_2_height - margin.top - margin.bottom\n        svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + h + \")\")\n        .call(d3.axisBottom(x));\n\n        svg.append(\"g\")\n        .call(d3.axisLeft(y));\n\n        console.log(winData)\n\n        svg.append('g')\n        .selectAll(\"dot\")\n        .data(winData)\n        .enter()\n        .append(\"circle\")\n        .style(\"fill\", \"#F45B69\")\n        .on(\"mouseover\", function(d) {\t\t\n            tooltip.transition()\t\t\n                .duration(100)\t\t\n                .style(\"opacity\", 0.9);\t\n                \n            tooltip.html(\"<b>\"+d[0]+ \"</b>\" + \"<br/>\"  + \"<b>Wins</b>: \" + d[1].toFixed(2) + \"%\" + \"<br/>\"  + \"<b>Goals Scored</b>: \" + d[2])\t\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 30) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            tooltip.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\n        })\t\n        .transition()\n        .duration(1000)\n        .attr(\"cx\", function (d) { return x(d[2]); } )\n        .attr(\"cy\", function (d) { return y(d[1]); } )\n        .attr(\"r\", 5)\n        \n\n\n    });\n        \n\n    function findWinPercentage(data){\n            var wins = {}\n            var games = {}\n            var win_pct = []\n\n            for(var i = 0; i < data.length; i++){\n                let home_team = data[i].home_team;\n                let away_team = data[i].away_team;\n                let score_dif = parseInt(data[i].home_score) - parseInt(data[i].away_score);\n                let winner = score_dif > 0 ? home_team : away_team;\n\n                \n                if(!(winner in wins)){\n                    wins[winner] = 1;\n                }\n                else{\n                    wins[winner] ++;\n                }\n                \n\n                if(!(home_team in games)){\n                    games[home_team] = 1;\n                }\n                else{\n                    games[home_team] ++;\n                }\n\n                if(!(away_team in games)){\n                    games[away_team] = 1;\n                }\n                else{\n                    games[away_team] ++;\n                }\n            }\n            let keys = Object.keys(games)\n            for(var i = 0; i < keys.length; i++){\n                if(keys[i] in wins){\n                    win_pct.push([keys[i], ((wins[keys[i]]/games[keys[i]])*100)])\n                }\n                else{\n                    win_pct.push([keys[i], 0.0])\n                }\n\n            }\n\n            return win_pct\n    }\n\n    function findGoals(data){\n\n            var goals = {}\n            for(var i = 0; i < data.length; i++){\n                let home_team = data[i].home_team;\n                let away_team = data[i].away_team;\n                let home_score = parseInt(data[i].home_score);\n                let away_score = parseInt(data[i].away_score);\n\n                if(!(home_team in goals)){\n                    goals[home_team] = home_score;\n                }\n                else{\n                    goals[home_team] = goals[home_team] + home_score;\n                }\n\n                if(!(away_team in goals)){\n                    goals[away_team] = away_score;\n                }\n                else{\n                    goals[away_team] = goals[away_team] + away_score;\n                }\n        \n            }\n            return goals\n    }\n}\n\nexport default function main(d3, football, locations){\n\n    // Add your JavaScript code here\nconst MAX_WIDTH = Math.max(1080, window.innerWidth);\nconst MAX_HEIGHT = 720;\nconst margin = {top: 40, right: 100, bottom: 40, left: 175};\n\n// Assumes the same graph width, height dimensions as the example dashboard. Feel free to change these if you'd like\nlet graph_1_width = (MAX_WIDTH / 2) - 10, graph_1_height = 250;\nlet graph_2_width = (MAX_WIDTH / 2) - 10, graph_2_height = 275;\nlet graph_3_width = MAX_WIDTH / 2, graph_3_height = 575;\n\nlet FOOTBALL_DATA_SET = football\n\n    graph1(d3, margin, graph_1_width, graph_1_height, FOOTBALL_DATA_SET);\n    graph3(d3, margin, graph_3_width, graph_3_height, FOOTBALL_DATA_SET, locations);\n    graph2(d3, margin, graph_2_width, graph_2_height, FOOTBALL_DATA_SET);\n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}