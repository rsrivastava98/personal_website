{"ast":null,"code":"var _jsxFileName = \"/Users/rudrasrivastava/Desktop/my-app/src/FilteredList.jsx\";\nimport React, { Component } from \"react\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport List from \"./List\";\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props); //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n\n    this.onSearch = event => {\n      this.setState({\n        search: event.target.value.trim().toLowerCase()\n      });\n    };\n\n    this.onSelectFilterType = event => {\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.matchesFilterType = item => {\n      return item.type == this.state.type;\n    };\n\n    this.filterAndSearch = item => {\n      return item.name.toLowerCase().search(this.state.search) !== -1 && this.matchesFilterType(item);\n    };\n\n    this.state = {\n      search: \"\",\n      type: \"all\"\n    };\n  } //Sets the state whenever the user types on the search bar\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"filter-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Cereal Search\"), React.createElement(DropdownButton, {\n      title: \"Type\",\n      id: \"dropdown-basic-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      eventKey: \"all\",\n      onSelect: this.onSelectFilterType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"All\")), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      onChange: this.onSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(List, {\n      items: this.props.items.filter(this.filterAndSearch),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default FilteredList;","map":{"version":3,"sources":["/Users/rudrasrivastava/Desktop/my-app/src/FilteredList.jsx"],"names":["React","Component","DropdownButton","Dropdown","List","FilteredList","constructor","props","onSearch","event","setState","search","target","value","trim","toLowerCase","onSelectFilterType","type","matchesFilterType","item","state","filterAndSearch","name","render","items","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;AACA;;AAJiB,SAYnBC,QAZmB,GAYRC,KAAK,IAAI;AAClB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,WAA1B;AAAV,OAAd;AACD,KAdkB;;AAAA,SAoBnBC,kBApBmB,GAoBEP,KAAK,IAAI;AAC5B,WAAKC,QAAL,CAAc;AAAEO,QAAAA,IAAI,EAAER,KAAK,CAACG,MAAN,CAAaC;AAArB,OAAd;AACD,KAtBkB;;AAAA,SA+BnBK,iBA/BmB,GA+BCC,IAAI,IAAI;AAC1B,aAAOA,IAAI,CAACF,IAAL,IAAa,KAAKG,KAAL,CAAWH,IAA/B;AACD,KAjCkB;;AAAA,SAwCnBI,eAxCmB,GAwCDF,IAAI,IAAI;AACxB,aAAOA,IAAI,CAACG,IAAL,CAAUP,WAAV,GAAwBJ,MAAxB,CAA+B,KAAKS,KAAL,CAAWT,MAA1C,MAAsD,CAAC,CAAvD,IAA4D,KAAKO,iBAAL,CAAuBC,IAAvB,CAAnE;AACD,KA1CkB;;AAKjB,SAAKC,KAAL,GAAa;AACXT,MAAAA,MAAM,EAAE,EADG;AAEXM,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID,GAVkC,CAYnC;;;AAiCAM,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,MAAtB;AAA6B,MAAA,EAAE,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAC,KAAxB;AAA8B,MAAA,QAAQ,EAAE,KAAKP,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAHF,EAQE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,QAA/B;AAAwC,MAAA,QAAQ,EAAE,KAAKR,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAwB,KAAKJ,eAA7B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AA3DkC;;AA8DrC,eAAehB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport List from \"./List\";\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n    //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n    this.state = {\n      search: \"\",\n      type: \"all\"\n    };\n  }\n\n  //Sets the state whenever the user types on the search bar\n  onSearch = event => {\n    this.setState({ search: event.target.value.trim().toLowerCase() });\n  };\n\n  /*\n   * This function gets called every time a new filter type is selected in the dropdown. Your job is to handle the state\n   * changes that should occur when a new filter type is selected.\n   */\n  onSelectFilterType = event => {\n    this.setState({ type: event.target.value });\n  };\n\n  /*\n   * This function should determine whether the item being passed in matches the type\n   * that we are filtering on. Remember that the selected type we are filtering on is stored\n   * in this.state!\n   * Input: An element from your List component\n   * Output: true or false\n   */\n  matchesFilterType = item => {\n    return item.type == this.state.type\n  }\n\n  /*\n   * The function is passed into a builtin filter() function. filter() calls this function on every element\n   * in the list. If this fucntion returns true for a given element, filter() will add that element to its\n   * return list.\n   */\n  filterAndSearch = item => {\n    return item.name.toLowerCase().search(this.state.search) !== -1 && this.matchesFilterType(item);\n  }\n\n  render() {\n    return (\n      <div className=\"filter-list\">\n        <h1>Cereal Search</h1>\n        {/* TODO: Add more menu items with onSelect handlers*/}\n        <DropdownButton title=\"Type\" id=\"dropdown-basic-button\">\n          <Dropdown.Item eventKey=\"all\" onSelect={this.onSelectFilterType}>\n            All\n          </Dropdown.Item>\n        </DropdownButton>\n        <input type=\"text\" placeholder=\"Search\" onChange={this.onSearch} />\n        <List items={this.props.items.filter(this.filterAndSearch)} />\n      </div>\n    );\n  }\n}\n\nexport default FilteredList;\n"]},"metadata":{},"sourceType":"module"}